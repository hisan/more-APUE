//标准输入、输出、出错文件描述符
STDIN_FILENO
STDOUT_FILENO
STDERR_FILENO

#include <fcntl.h>

int open(const char *pathname, int flags);
int open(const char *pathname, int flags, mode_t mode);

flags取值：
//选1
O_RDONLY，O_WRONLY,O_RDWR，分别为只读，只写，读写

//可选
O_APPEND：每次写文件时都追加到文件尾端

O_ASYNC：
	
O_CLOEXEC (Since Linux 2.6.23)
	 
O_CREAT：文件若不存在就创建

...

通常在编程中，通过对flags进行 与or或，得到我们想要的文件操作方式


mode取值
S_IRWXU  00700 user (file owner) has read, write and execute permission

S_IRUSR  00400 user has read permission

S_IWUSR  00200 user has write permission

S_IXUSR  00100 user has execute permission

S_IRWXG  00070 group has read, write and execute permission

S_IRGRP  00040 group has read permission

S_IWGRP  00020 group has write permission

S_IXGRP  00010 group has execute permission

S_IRWXO  00007 others have read, write and execute permission

S_IROTH  00004 others have read permission

S_IWOTH  00002 others have write permission

S_IXOTH  00001 others have execute permission

